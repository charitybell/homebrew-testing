name: build and release

on:
  workflow_dispatch: {}
  push:
    branches:
      - 'main'

jobs:
  prepare:
    outputs:
      formula: ${{ steps.set-output-matrix.outputs.formula }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - uses: Homebrew/actions/setup-homebrew@master

    - id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        files: Formula/*.rb
        json: true
        json_raw_format: true

    - id: set-output-matrix
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo formula=$(ls | jq -cRrs 'split("\n")[:-1]') >> $GITHUB_OUTPUT
        else
          echo 'formula=${{ steps.changed-files.outputs.all_changed_files }}' >> $GITHUB_OUTPUT
        fi

  build:
    needs: prepare
    if: ${{ needs.prepare.outputs.formula != '[]' }}
    outputs:
      tag-message: ${{ steps.build-bottle.outputs.tag-message }}
    strategy:
      matrix:
        formula: ${{ fromJSON(needs.prepare.outputs.formula) }}
        os: ${{ fromJSON(vars.RUNNERS) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: Homebrew/actions/git-user-config@master

      - uses: Homebrew/actions/setup-homebrew@master

      - name: build bottle (${{ matrix.formula }})
        id: build-bottle
        run: |
          FORMULA_NAME="${{ github.repository }}/$(basename ${{ matrix.formula }} .rb)"
          brew install --build-bottle "$FORMULA_NAME"
          brew bottle --force-core-tap --no-rebuild --json "$FORMULA_NAME"

      - uses: actions/upload-artifact@v3
        with:
          name: formula-bottles
          path: |
            *.bottle.tar.gz
            *.bottle.json

  tag:
    needs: [prepare, build]
    runs-on: ubuntu-latest
    outputs:
      tag-array: ${{ steps.bottle-and-tag.outputs.tag-array }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: Homebrew/actions/setup-homebrew@master

      - uses: actions/download-artifact@v3
        with:
          name: formula-bottles

      - uses: fregante/setup-git-user@v2

      - uses: dcarbone/install-jq-action@v1.0.1

      - uses: charitybell/set-git-url-action@main
        with:
          token: ${{ github.token }}

      - name: bottle and tag
        id: bottle-and-tag
        run: |
          declare -A tag_array
          for formula in $(echo '${{ needs.prepare.outputs.formula }}' | jq -rc .[]); do
            FORMULA_NAME="$(basename $formula .rb)"
            brew bottle --merge --write ${FORMULA_NAME}-*.bottle.json
            FORMULA_TAP=$(echo ${{ github.repository }} | cut -d / -f 1)/$(echo ${{ github.repository }} | cut -d / -f 2 | cut -d - -f 2)/$FORMULA_NAME
            FORMULA_VERSION=$(jq -cr .['"'$FORMULA_TAP'"'].formula.pkg_version ${FORMULA_NAME}-*.bottle.json | head -n 1)
            TAG_MESSAGE="${FORMULA_NAME}-${FORMULA_VERSION}"
            git tag -a "$TAG_MESSAGE" -m "$TAG_MESSAGE"
            tag_array["$formula"]="$TAG_MESSAGE"
          done
          git -c push.default=current push --tags
          git -c push.default=current push

          output_json=$(comma=''; echo -n '{' ; for key in "${!tag_array[@]}"; do echo -n $comma '"'"$key"'"':'"'"${tag_array[$key]}"'"'; comma=","; done; echo -n "}")
          echo "tag-array=$output_json" >> $GITHUB_OUTPUT

  release:
    needs: [prepare, build, tag]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        formula: ${{ fromJSON(needs.prepare.outputs.formula) }}
    steps:
      - uses: dcarbone/install-jq-action@v1.0.1

      - uses: actions/download-artifact@v3
        with:
          name: formula-bottles

      - id: get-bottle-names
        run: echo "value=$(echo $(basename ${{ matrix.formula }} .rb)'-*bottle.*tar.gz')" >> $GITHUB_OUTPUT

      - id: get-tag-name
        run: |
          TAG_NAME=$(echo '${{ needs.tag.outputs.tag-array }}' | jq -rc .['"'${{ matrix.formula }}'"'])
          echo $TAG_NAME
          echo "tag-name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Release (${{ matrix.formula }})
        uses: softprops/action-gh-release@v1
        with:
          tag_name: '${{ steps.get-tag-name.outputs.tag-name }}'
          # the multiline string is needed, otherwise the `*` globs break yaml syntax
          files: |
            ${{ steps.get-bottle-names.outputs.value }}
